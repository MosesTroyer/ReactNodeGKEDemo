name: Build and Deploy to GKE

on:
  workflow_dispatch:
  push:
    branches:
      - develop

env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GKE_ZONE: ${{ secrets.GKE_ZONE }}
  IMAGE: ${{ secrets.GKE_CLUSTER_NAME }}

jobs:
  setup-build-publish-deploy:
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest
    environment: production
    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - uses: 'google-github-actions/auth@v1'
        with:
          workload_identity_provider: ${{ secrets.GKE_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.GKE_SERVICE_ACCOUNT }}

      # Configure Docker to use the gcloud command-line tool as a credential
      # helper for authentication
      - run: |-
          gcloud --quiet auth configure-docker

      # Get the GKE credentials so we can deploy to the cluster
      - uses: google-github-actions/get-gke-credentials@db150f2cc60d1716e61922b832eae71d2a45938f
        with:
          cluster_name: ${{ secrets.GKE_CLUSTER_NAME }}
          location: 'us-central1'

      # Build the Docker image
      - name: Build
        run: |-
          docker build \
            --tag "gcr.io/${{ env.PROJECT_ID }}/${{ env.IMAGE }}:$GITHUB_SHA" \
            --build-arg GITHUB_SHA="$GITHUB_SHA" \
            --build-arg GITHUB_REF="$GITHUB_REF" \
            .

      # Push the Docker image to Google Container Registry
      - name: Publish
        run: |-
          docker push "gcr.io/${{ env.PROJECT_ID }}/$IMAGE:$GITHUB_SHA"

      # Set up kustomize
      - name: Set up Kustomize
        run: |-
          curl -sfLo kustomize https://github.com/kubernetes-sigs/kustomize/releases/download/v3.1.0/kustomize_3.1.0_linux_amd64
          chmod u+x ./kustomize

      # Deploy the Docker image to the GKE cluster
      - name: Deploy
        run: |-
          ./kustomize edit set image gcr.io/${{ env.PROJECT_ID }}/IMAGE:TAG=gcr.io/${{ env.PROJECT_ID }}/$IMAGE:$GITHUB_SHA
          ./kustomize build . | kubectl apply -f -
          kubectl rollout status deployment/$IMAGE
          kubectl get services -o wide

